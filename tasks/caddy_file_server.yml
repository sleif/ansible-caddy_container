---

# - name: Install python-passlib+bcrypt (caddy pw default) if required
#   ansible.builtin.package:
#     name: python-passlib+bcrypt
#   when: caddy_basicauth_user is defined and caddy_basicauth_user is truthy

- name: Podman generate systemd become block
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  block:
    - name: Remove reverse proxy configuration for {{ caddy_config_name }}
      ansible.builtin.file:
        path: "{{ _caddy_config_dir }}/{{ caddy_config_name }}.caddy"
        state: absent
      register: _result
      when:
        - caddy_file_server_state | d('present') == 'absent'

    - name: evaluate _caddy_reload_required for {{ caddy_container_name }}
      ansible.builtin.set_fact:
        _caddy_reload_required: "{{ true if _caddy_reload_required | d(false) | bool or _result.changed | bool else false }}"

    - name: block for default file server root
      when:
        - not caddy_file_server_root is defined
      block:
        - name: Set fact _caddy_file_server_root_default for {{ caddy_config_name }}
          ansible.builtin.set_fact:
            _caddy_file_server_root_default: "{{ caddy_file_server_root | d(_caddy_data_dir + '/' + caddy_config_name) }}"

        - name: Create file_server directories for {{ caddy_config_name }}
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: "0755"
          with_items:
            # - "{{ _caddy_file_server_root_default }}/www"
            - "{{ _caddy_file_server_root_default }}"
            # - "{{ _caddy_file_server_root_default }}/.well-known"

        - name: Copy document root files for {{ caddy_config_name }}
          ansible.builtin.copy:
            dest: "{{ _caddy_file_server_root_default }}"
            # dest: "{{ _caddy_file_server_root_default }}/.well-known/dnt-policy.txt"
            src: document_root/
            mode: "0755"
            setype: container_file_t

        - name: Caddy setup file_server from template for {{ caddy_config_name }}
          ansible.builtin.template:
            src: "{{ 'imprint.html.j2' if caddy_imprint is defined and caddy_file_server_with_imprint | d(false) | bool else 'index.html.j2' }}"
            dest: "{{ _caddy_file_server_root_default ~ '/index.html' }}"
            mode: "0644"
            setype: "container_file_t"
            lstrip_blocks: true

    - name: Caddy setup file_server from template for {{ caddy_config_name }}
      ansible.builtin.template:
        src: "Caddyfile_target_config.j2"
        dest: "{{ _caddy_config_dir }}/{{ caddy_config_name }}.caddy"
        mode: "0644"
        seuser: "unconfined_u"
        setype: "container_file_t"
        lstrip_blocks: true
      vars:
        _caddy_header_lines: "{{ caddy_header_lines | d('') }}"
        _caddy_global_config_lines: "{{ caddy_global_config_lines | d('') }}"
        _caddy_file_server_config_lines: "{{ caddy_file_server_config_lines | d('') }}"
      register: _result
      when:
        - caddy_file_server_state | d('present') == 'present'

    - name: evaluate _caddy_reload_required for {{ caddy_container_name }}
      ansible.builtin.set_fact:
        _caddy_reload_required: "{{ true if _caddy_reload_required | d(false) | bool or _result.changed | bool else false }}"
